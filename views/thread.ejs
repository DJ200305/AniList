<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="UTF-8" />
    <title>Forum - Create Thread Â· AniList</title>
    <link rel="icon" type="image/png" sizes="32x32" href="https://anilist.co/img/icons/favicon-32x32.png" />
    <link rel="stylesheet" href="/styles/media_individual.css" />
    <link rel="stylesheet" href="/styles/required.css" />
    <link rel="stylesheet" href="/styles/thread.css" />
</head>

<body>
    <%- include("navcontainer.ejs", { isAdmin, userimage, username }) %>

    <%
        function relativeTime(date) {
            let time = new Date() - date;
            let timeString = "";

            let seconds = Math.floor(time / 1000);
            let minutes = Math.floor(seconds / 60);
            let hours = Math.floor(minutes / 60);
            let days = Math.floor(hours / 24);
            let months = Math.floor(days / 30);
            let years = Math.floor(months / 12);

            if (years) {
                if(years == 1) timeString += `${years} year ago`;
                else timeString += `${years} years ago`;
            }
            else if (months) {
                if(months == 1) timeString += `${months} month ago`;
                else timeString += `${months} months ago`;
            }
            else if (days) {
                if(days == 1) timeString += `${days} day ago`;
                else timeString += `${days} days ago`;
            }
            else if (hours) {
                if(hours == 1) timeString += `${hours} hour ago`;
                else timeString += `${hours} hours ago`;
            }
            else if (minutes) {
                if(minutes == 1) timeString += `${minutes} minute ago`;
                else timeString += `${minutes} minutes ago`;
            }
            else timeString += `${seconds} seconds ago`;

            return timeString;
        }
    %>

    <%
        function getColor(category) {
            category = category.toUpperCase()
            if(category === "GENERAL") return "#4EA3E6";
            else if(category === "ANIME") return "#00AAFF";
            else if(category === "MANGA") return "#4CAF50";
            else if(category === "RELEASE DISCUSSION") return "#673AB7";
            else if(category === "SITE ANNOUNCEMENTS") return "#E91E63";
            else if(category === "NEWS") return "#009688";
            else if(category === "MUSIC") return "#607D8B";
            else if(category === "RECOMMENDATIONS") return "#B85AC7";
            else if(category === "SITE FEEDBACK") return "#FB471E";
            else if(category === "BUG REPORTS") return "#EF3051";
            else if(category === "MISC") return "#795548";
        }
        
    %>

    <% function renderComments(comments, depth = 0) { %>

        <% comments.forEach(comment => { %>
            <% if(depth % 2 == 0) { %>
                <div class="comment-wrap" style="background-color: rgb(21, 31, 46);" id="comment-<%=comment.commentId%>" depth="<%=depth%>">
                    <div class="collapse"></div>
                    <div class="grow">
                        <div class="comment">

                            <div class="header-margin">
                                <a href="/user/<%=comment.userName%>">
                                    <img src="<%=comment.userImage%>" alt="">
                                </a>
                                <div class="username"><%=comment.userName%></div>
                                <div class="timee"><%=relativeTime(comment.dateOfCreation)%></div>

                                <div class="comment-link" onclick="openCommentEditor('<%=comment.commentId%>')">
                                    <svg aria-hidden="true" focusable="false" data-prefix="fas" data-icon="reply" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512">
                                        <path data-v-20438142="" fill="currentColor" d="M8.309 189.836L184.313 37.851C199.719 24.546 224 35.347 224 56.015v80.053c160.629 1.839 288 34.032 288 186.258 0 61.441-39.581 122.309-83.333 154.132-13.653 9.931-33.111-2.533-28.077-18.631 45.344-145.012-21.507-183.51-176.59-185.742V360c0 20.7-24.3 31.453-39.687 18.164l-176.004-152c-11.071-9.562-11.086-26.753 0-36.328z">
                                        </path>
                                    </svg>
                                </div>

                            </div>

                            <div class="comment-description">
                                    <%=comment.commentBody%>
                            </div>

                        </div>

                        <% if(comment.children.length > 0) { %>
                            <div class="children">
                                <% renderComments(comment.children, depth + 1); %>
                            </div>
                        <% } else { %>
                            <div class="children"></div>
                        <% } %>

                    </div>
                    
                </div>
            <% } else { %>
                <div class="comment-wrap" style="background-color: rgb(11, 22, 34);" id="comment-<%=comment.commentId%>" depth="<%=depth%>">
                    <div class="collapse"></div>
                    <div class="grow">
                        <div class="comment">

                            <div class="header-margin">
                                <a href="/user/<%=comment.userName%>">
                                    <img src="<%=comment.userImage%>" alt="">
                                </a>
                                <div class="username"><%=comment.userName%></div>
                                <div class="timee"><%=relativeTime(comment.dateOfCreation)%></div>

                                <div class="comment-link" onclick="openCommentEditor('<%=comment.commentId%>')">
                                    <svg aria-hidden="true" focusable="false" data-prefix="fas" data-icon="reply" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512">
                                        <path data-v-20438142="" fill="currentColor" d="M8.309 189.836L184.313 37.851C199.719 24.546 224 35.347 224 56.015v80.053c160.629 1.839 288 34.032 288 186.258 0 61.441-39.581 122.309-83.333 154.132-13.653 9.931-33.111-2.533-28.077-18.631 45.344-145.012-21.507-183.51-176.59-185.742V360c0 20.7-24.3 31.453-39.687 18.164l-176.004-152c-11.071-9.562-11.086-26.753 0-36.328z">
                                        </path>
                                    </svg>
                                </div>

                            </div>

                            <div class="comment-description">
                                    <%=comment.commentBody%>
                            </div>

                        </div>

                        <% if(comment.children.length > 0) { %>
                            <div class="children">
                                <% renderComments(comment.children, depth + 1); %>
                            </div>
                        <% } else { %>
                            <div class="children"></div>
                        <% } %>

                    </div>
                
                </div>
            <% } %>

        <% }); %>

    <% } %>


    <div class="forum-thread-container">
        <h2 class="title"><%=thread.THREAD_TITLE%></h2>
        <div class="body">
            <div class="header">
                <a href="/user/<%=thread.USERNAME%>">
                    <img src="<%=thread.USER_IMAGE%>"
                        alt="" />
                </a>

                <div class="username"><%=thread.USERNAME%></div>
                <div class="time"><%=relativeTime(thread.DATE_OF_CREATION)%></div>
            </div>

            <div class="thread-body">
                <%=thread.THREAD_BODY%>
            </div>

            <div class="footer">

                <% let categories = thread.CATEGORIES ? thread.CATEGORIES.split(",") : [] %>

                <% for(let i = 0; i < categories.length; ++i) { %>
                    <div class="category" style="background-color: <%=getColor(categories[i])%>; font-family: 'Roboto'">
                        <%=categories[i].toLowerCase()%>
                    </div>
                <% } %>

                <% if(thread.ANIME_ID) { %>
                        <div class="category" style="background-color: <%=getColor('anime')%>;"><%=thread.ANIME_NAME%></div>
                <% } else if(thread.MANGA_ID) { %>
                    <div class="category" style="background-color: <%=getColor('manga')%>;"><%=thread.MANGA_NAME%></div>
                <% } %>

                <div class="actions">
                    <div class="subscribe btn">Subscribe</div>
                    <div class="likee btn">
                        <span style="
                color: #fff;
                display: block;
                margin-right: 5px;
                font-size: 14px;
                align-self: center;
            "><%=thread.LIKES%></span>
                        <svg style="align-self: center" aria-hidden="true" focusable="false" data-prefix="fas"
                            data-icon="heart" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512">
                            <path data-v-3f00779d="" data-v-5fb0ec91="" fill="currentColor"
                                d="M462.3 62.6C407.5 15.9 326 24.3 275.7 76.2L256 96.5l-19.7-20.3C186.1 24.3 104.5 15.9 49.7 62.6c-62.8 53.6-66.1 149.8-9.9 207.9l193.5 199.8c12.5 12.9 32.8 12.9 45.3 0l193.5-199.8c56.3-58.1 53-154.3-9.8-207.9z"
                                class=""></path>
                        </svg>
                    </div>
                    <div class="comment" onclick="openCommentEditor(null)">Comment</div>
                </div>
            </div>
        </div>

        <div>
            <div class="comments-header">
                <% if(thread.COMMENT_COUNT) { %>
                    <%=thread.COMMENT_COUNT%> Replies
                <% } else if(thread.COMMENT_COUNT === 1) { %>
                    <%=thread.COMMENT_COUNT%> Reply
                <% } else { %>
                    <%=thread.COMMENT_COUNT%> Replies
                <% } %>
            </div>

            <div class="comments">

                <% renderComments(comments) %>

            </div>
            
        </div>
    </div>

    <div class="comment-editor-wrapper">
        <div class="comment-editor">
            <textarea id="" cols="30" rows="10" placeholder="Write comment"></textarea>
            <div class="actions">
                <button class="close" onclick="closeCommentEditor()">Close</button>
                <button class="send" onclick="sendComment()">Send</button>
            </div>
        </div>
    </div>

    <script src="/scripts/tooltip.js"></script>
    <script>
        const subscribeBtn = document.querySelector(".actions .subscribe")
        const likeBtn = document.querySelector(".actions .likee")

        let isSubscribed = "<%=thread.IS_SUBSCRIBED%>"
        let isLiked = "<%=thread.IS_LIKED%>"
        
        if(isSubscribed) {
            subscribeBtn.innerHTML = "Subscribed"
            subscribeBtn.classList.add("subscribed")
        }

        if(isLiked) {
            likeBtn.classList.add("liked")
        }


        async function post (type) {

            let url = "http://localhost:8080/forum/thread/<%=thread.THREAD_ID%>"

            const response = await fetch(url, {
                method: "POST",
                headers: {
                    "Content-Type": "application/json",
                    Accept: "application/json"
                },
                body: JSON.stringify({
                    type
                })
            })

            return await response.json()
        }

        subscribeBtn.onclick = async () => {
            const data = (await post("subscribe"))
            
            if(data.isSubscribed) {
                subscribeBtn.innerHTML = "Subscribed"
                subscribeBtn.classList.add("subscribed")
            } else {
                subscribeBtn.innerHTML = "Subscribe"
                subscribeBtn.classList.remove("subscribed")
            }
        }

        likeBtn.onclick = async () => {
            const data = (await post("like"))
            
            if(data.isLiked) {
                likeBtn.children[0].innerHTML = data.counter
                likeBtn.classList.add("liked")
            } else {
                likeBtn.children[0].innerHTML = data.counter
                likeBtn.classList.remove("liked")
            }
        }
    </script>
    <script src="/socket.io/socket.io.js"></script>
    <script>
        const commentEditor = document.querySelector(".comment-editor-wrapper")
        const closeBtn = document.querySelector(".actions .close")
        const sendBtn = document.querySelector(".actions .send")
        const comment = document.querySelector(".comment-editor-wrapper div textarea")

        function openCommentEditor(id) {
            commentEditor.id = id
            console.log("openCommentEditor: ", commentEditor.id)
            commentEditor.classList.add("active")
        }

        function closeCommentEditor() {
            console.log("closeCommentEditor: ", commentEditor.id)
            commentEditor.classList.remove("active")
        }
        
        function relativeTime(date) {
            let time = new Date() - date;
            let timeString = "";

            let seconds = Math.floor(time / 1000);
            let minutes = Math.floor(seconds / 60);
            let hours = Math.floor(minutes / 60);
            let days = Math.floor(hours / 24);
            let months = Math.floor(days / 30);
            let years = Math.floor(months / 12);

            if (years) {
                if(years == 1) timeString += `${years} year ago`;
                else timeString += `${years} years ago`;
            }
            else if (months) {
                if(months == 1) timeString += `${months} month ago`;
                else timeString += `${months} months ago`;
            }
            else if (days) {
                if(days == 1) timeString += `${days} day ago`;
                else timeString += `${days} days ago`;
            }
            else if (hours) {
                if(hours == 1) timeString += `${hours} hour ago`;
                else timeString += `${hours} hours ago`;
            }
            else if (minutes) {
                if(minutes == 1) timeString += `${minutes} minute ago`;
                else timeString += `${minutes} minutes ago`;
            }
            else timeString += `${seconds} seconds ago`;

            return timeString;
        }

        let username = "<%=username%>"
        let userimage = "<%=userimage%>"

        async function sendComment() {
            console.log("sendComment: ", commentEditor.id)
            let commentBody = comment.value
            comment.value = ""

            let url = "http://localhost:8080/forum/thread/<%=thread.THREAD_ID%>"

            let depth = -1;

            if(commentEditor.id != "null") {
                let ID = `#comment-${commentEditor.id}`
                let parentComment = document.querySelector(ID)
                depth = parentComment.getAttribute("depth")
            }
            
            
            const response = await fetch(url, {
                method: "POST",
                headers: {
                    "Content-Type": "application/json",
                    Accept: "application/json"
                },
                body: JSON.stringify({
                    type: "comment",
                    commentBody,
                    threadid: "<%=thread.THREAD_ID%>",
                    username: "<%=username%>",
                    userimage: "<%=userimage%>",
                    parentCommentId: commentEditor.id === "null" ? null : commentEditor.id,
                    depth,
                })
            })

            const data = await response.json()
            console.log(data)
            closeCommentEditor() 
        }

        const socket = io()

        socket.on("newComment", message => {

            const newCommentWrap = document.createElement('div');

            newCommentWrap.classList.add("comment-wrap")

            const content = `
                <div class="collapse"></div>
                    <div class="grow">
                        <div class="comment">
                            <div class="header-margin">
                                <a href="/user/${message.username}">
                                    <img src="${message.userimage}" alt="">
                                </a>
                                <div class="username">${message.username}</div>
                                <div class="timee">${relativeTime(new Date())}</div>

                                <div class="comment-link" onclick="openCommentEditor(${message.commentid})">
                                    <svg aria-hidden="true" focusable="false" data-prefix="fas" data-icon="reply" role="img" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 512 512">
                                        <path data-v-20438142="" fill="currentColor" d="M8.309 189.836L184.313 37.851C199.719 24.546 224 35.347 224 56.015v80.053c160.629 1.839 288 34.032 288 186.258 0 61.441-39.581 122.309-83.333 154.132-13.653 9.931-33.111-2.533-28.077-18.631 45.344-145.012-21.507-183.51-176.59-185.742V360c0 20.7-24.3 31.453-39.687 18.164l-176.004-152c-11.071-9.562-11.086-26.753 0-36.328z">
                                        </path>
                                    </svg>
                                </div>

                            </div>

                            <div class="comment-description">
                                    ${message.commentBody}
                            </div>

                        </div>

                        <div class="children">
                            
                        </div>

                    </div>
            `

            newCommentWrap.innerHTML = content
            newCommentWrap.setAttribute("depth", message.depth + 1)
            const childcommentid = `comment-${message.commentid}`
            newCommentWrap.setAttribute("id", childcommentid)

            if(message.depth % 2 === 0) {
                newCommentWrap.style.backgroundColor = "rgb(11, 22, 34)"
            } else {    
                newCommentWrap.style.backgroundColor = "rgb(21, 31, 46)"
            }

            const replySection = document.querySelector(".comments-header")

            if(message.parent === null) {
                const comments = document.querySelector(".comments")
                comments.appendChild(newCommentWrap)
                message.total === 1 ? replySection.innerHTML = `${message.total} reply` : replySection.innerHTML = `${message.total} replies`
            } else {
                const ID = `#comment-${message.parent} .grow .children`
                const parentComment = document.querySelector(ID)

                console.log(ID, parentComment)

                parentComment.appendChild(newCommentWrap)
                message.total === 1 ? replySection.innerHTML = `${message.total} reply` : replySection.innerHTML = `${message.total} replies`
            }  
        })

    </script>
</body>

</html>